{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/pages/NotFound.js","components/layout/Header.js","components/pages/About.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onShowClick","onDeleteClick","delete","t0","_this2","_this$props$contact","name","email","phone","className","onClick","style","cursor","bind","float","Link","to","color","Contacts","Fragment","contacts_Contact","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","defaultProps","AddContact","errors","onSubmit","event","_this$state","newContact","preventDefault","abrupt","post","history","push","e","defineProperty","target","_this$state2","layout_TextInputGroup","EditContact","editedContact","match","params","put","NotFound","Header","branding","defaulProps","About","Test","title","body","fetch","then","response","json","App","context_Provider","HashRouter","layout_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e5c22144.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport axios from 'axios'\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'DELETE_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(contact => contact.id !== action.payload)\r\n      };\r\n    case 'ADD_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts]\r\n      };\r\n    case 'UPDATE_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map(contact => contact.id === action.payload.id ? (contact = action.payload) : contact)\r\n      };\r\n    default:\r\n      return state\r\n  }\r\n};\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    contacts: [],\r\n    dispatch: action => {\r\n      this.setState(state => reducer(state, action))\r\n    }\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const res = await axios.get('https://jsonplaceholder.typicode.com/users');\r\n\r\n    this.setState({\r\n      contacts: res.data\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    )\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Link} from \"react-router-dom\";\r\nimport {Consumer} from \"../../context\";\r\nimport axios from 'axios'\r\n\r\nclass Contact extends Component {\r\n  state = {\r\n    showContactInfo: false\r\n  };\r\n\r\n  static propTypes = {\r\n    contact: PropTypes.object.isRequired\r\n  };\r\n\r\n  onShowClick = () => {\r\n    this.setState({\r\n      showContactInfo: !this.state.showContactInfo\r\n    })\r\n  };\r\n\r\n  onDeleteClick = async (id, dispatch) => {\r\n    try {\r\n      await axios.delete('https://jsonplaceholder.typicode.com/users/' + id);\r\n      dispatch({\r\n        type: 'DELETE_CONTACT',\r\n        payload: id\r\n      })\r\n    } catch (e) {\r\n      dispatch({\r\n        type: 'DELETE_CONTACT',\r\n        payload: id\r\n      })\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {id, name, email, phone} = this.props.contact;\r\n    const {showContactInfo} = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const {dispatch} = value;\r\n          return (\r\n            <div className=\"card card-body mb-3\">\r\n              <h4>{name} <i onClick={this.onShowClick}\r\n                            className=\"fas fa-sort-down\"\r\n                            style={{cursor: 'pointer'}}/><i\r\n                onClick={this.onDeleteClick.bind(this, id, dispatch)}\r\n                className=\"fas fa-trash\" style={{float: 'right', cursor: 'pointer'}}/>\r\n                <Link to={`contact/edit/${id}`} >\r\n                  <i style={{float: 'right', cursor: 'pointer', color: '#212529'}}\r\n                    className=\"fas fa-pencil-alt mr-2\"/>\r\n                </Link>\r\n              </h4>\r\n              {showContactInfo ? (<ul className=\"list-group\">\r\n                <li className=\"list-group-item\">Email: {email}</li>\r\n                <li className=\"list-group-item\">Phone: {phone}</li>\r\n              </ul>) : null}\r\n            </div>\r\n          )\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\n/*Contact.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  email: PropTypes.string.isRequired,\r\n  phone: PropTypes.string.isRequired,\r\n};*/\r\n\r\nexport default Contact;","import React, {Component} from 'react';\r\nimport Contact from './Contact'\r\nimport {Consumer} from \"../../context\";\r\n\r\nclass Contacts extends Component {\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const {contacts} = value;\r\n          return (\r\n            <React.Fragment>\r\n              <h1 className=\"display-4 bn2\">Contact List</h1>\r\n              {contacts.map(contact => (\r\n                <Contact key={contact.id} contact={contact}/>\r\n              ))}\r\n            </React.Fragment>\r\n          )\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contacts;","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport classnames from 'classnames'\r\n\r\nconst TextInputGroup = ({\r\n                          label,\r\n                          name,\r\n                          value,\r\n                          placeholder,\r\n                          type,\r\n                          onChange,\r\n                          error\r\n                        }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input placeholder={placeholder}\r\n             type={type}\r\n             name={name}\r\n             className={classnames('form-control', {'is-invalid': error})}\r\n             value={value}\r\n             onChange={onChange}/>\r\n      {error && <div className=\"invalid-feedback\">This field is invalid</div>}\r\n    </div>\r\n  )\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  error: PropTypes.string.isRequired\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n  type: 'text'\r\n};\r\n\r\nexport default TextInputGroup;","import React, {Component} from 'react';\r\nimport {Consumer} from \"../../context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport axios from 'axios';\r\n\r\n//import uuid from 'uuid';\r\n\r\nclass AddContact extends Component {\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    errors: {}\r\n  };\r\n\r\n  onSubmit = async (dispatch, event) => {\r\n    event.preventDefault();\r\n    //console.log(this.state);\r\n    const {name, email, phone} = this.state;\r\n\r\n    // Form Validations\r\n    if (name === '') {\r\n      this.setState({\r\n        errors: {name: 'Name is required!'}\r\n      });\r\n      return;\r\n    }\r\n    if (email === '') {\r\n      this.setState({\r\n        errors: {email: 'Email is required!'}\r\n      });\r\n      return;\r\n    }\r\n    if (name === '') {\r\n      this.setState({\r\n        phone: {phone: 'Phone is required!'}\r\n      });\r\n      return;\r\n    }\r\n\r\n    const newContact = {\r\n      /* id: uuid(),*/\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n\r\n    const res = await axios.post('https://jsonplaceholder.typicode.com/users', newContact);\r\n\r\n    dispatch({type: 'ADD_CONTACT', payload: res.data});\r\n\r\n    // Clear State\r\n    this.setState({\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n      errors: {}\r\n    });\r\n\r\n    // Redirect\r\n    this.props.history.push('/');\r\n\r\n  };\r\n\r\n  onChange = e => this.setState({\r\n    [e.target.name]: e.target.value\r\n  });\r\n\r\n  render() {\r\n    const {name, email, phone, errors} = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const {dispatch} = value;\r\n          return (<div className=\"card mb-3\">\r\n            <div className=\"card-header\">\r\n              Add Contact\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                <TextInputGroup label=\"Name\"\r\n                                name=\"name\"\r\n                                placeholder=\"Enter Name\"\r\n                                value={name}\r\n                                onChange={this.onChange}\r\n                                error={errors.name}/>\r\n                <TextInputGroup label=\"Email\"\r\n                                name=\"email\"\r\n                                type=\"email\"\r\n                                placeholder=\"Enter Email\"\r\n                                value={email}\r\n                                onChange={this.onChange}\r\n                                error={errors.email}/>\r\n                <TextInputGroup label=\"Phone\"\r\n                                name=\"phone\"\r\n                                placeholder=\"Enter Phone\"\r\n                                value={phone}\r\n                                onChange={this.onChange}\r\n                                error={errors.phone}/>\r\n                <input type=\"submit\" value=\"Add Contact\" className=\"btn btn-secondary btn-block\"/>\r\n              </form>\r\n            </div>\r\n          </div>)\r\n        }}\r\n      </Consumer>)\r\n  }\r\n}\r\n\r\nexport default AddContact;","import React, {Component} from 'react';\r\nimport {Consumer} from \"../../context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport axios from 'axios';\r\n\r\n//import uuid from 'uuid';\r\n\r\nclass EditContact extends Component {\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    errors: {}\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const {id} = this.props.match.params;\r\n    const res = await axios.get('https://jsonplaceholder.typicode.com/users/' + id);\r\n\r\n    const contact = res.data;\r\n\r\n    this.setState({\r\n      name: contact.name,\r\n      email: contact.email,\r\n      phone: contact.phone\r\n    })\r\n  };\r\n\r\n  onSubmit = async (dispatch, event) => {\r\n    event.preventDefault();\r\n    //console.log(this.state);\r\n    const {name, email, phone} = this.state;\r\n\r\n    // Form Validations\r\n    if (name === '') {\r\n      this.setState({\r\n        errors: {name: 'Name is required!'}\r\n      });\r\n      return;\r\n    }\r\n    if (email === '') {\r\n      this.setState({\r\n        errors: {email: 'Email is required!'}\r\n      });\r\n      return;\r\n    }\r\n    if (name === '') {\r\n      this.setState({\r\n        phone: {phone: 'Phone is required!'}\r\n      });\r\n      return;\r\n    }\r\n\r\n    const {id} = this.props.match.params;\r\n\r\n    const editedContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n\r\n    const res = await axios.put('https://jsonplaceholder.typicode.com/users/' + id, editedContact);\r\n\r\n    dispatch({\r\n      type: 'UPDATE_CONTACT',\r\n      payload: res.data\r\n    });\r\n\r\n    // Clear State\r\n    this.setState({\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n      errors: {}\r\n    });\r\n\r\n    // Redirect\r\n    this.props.history.push('/');\r\n\r\n  };\r\n\r\n  onChange = e => this.setState({\r\n    [e.target.name]: e.target.value\r\n  });\r\n\r\n  render() {\r\n    const {name, email, phone, errors} = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const {dispatch} = value;\r\n          return (<div className=\"card mb-3\">\r\n            <div className=\"card-header\">\r\n              Edit Contact\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                <TextInputGroup label=\"Name\"\r\n                                name=\"name\"\r\n                                placeholder=\"Enter Name\"\r\n                                value={name}\r\n                                onChange={this.onChange}\r\n                                error={errors.name}/>\r\n                <TextInputGroup label=\"Email\"\r\n                                name=\"email\"\r\n                                type=\"email\"\r\n                                placeholder=\"Enter Email\"\r\n                                value={email}\r\n                                onChange={this.onChange}\r\n                                error={errors.email}/>\r\n                <TextInputGroup label=\"Phone\"\r\n                                name=\"phone\"\r\n                                placeholder=\"Enter Phone\"\r\n                                value={phone}\r\n                                onChange={this.onChange}\r\n                                error={errors.phone}/>\r\n                <input type=\"submit\" value=\"Edit Contact\" className=\"btn btn-secondary btn-block\"/>\r\n              </form>\r\n            </div>\r\n          </div>)\r\n        }}\r\n      </Consumer>)\r\n  }\r\n}\r\n\r\nexport default EditContact;","import React from 'react';\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">404 Page Not Found</h1>\r\n      <p className=\"lead\">Sorry , that page does not exist</p>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n  const {branding} = props;\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-info mb-4 py-0\">\r\n      <div className=\"container\">\r\n        <Link to=\"/\" className=\"navbar-brand\">\r\n          {branding}\r\n        </Link>\r\n        <div>\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/\" className=\"nav-link\">\r\n                <i className=\"fas fa-home mr-1\"/>\r\n                Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/contact/add\" className=\"nav-link\">\r\n                <i className=\"fas fa-plus mr-1\"/>\r\n                Add\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/about\" className=\"nav-link\">\r\n                <i className=\"fas fa-question mr-1\"/>\r\n                About\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n};\r\n\r\nHeader.defaulProps = {\r\n  branding: 'My App'\r\n};\r\n\r\nHeader.propTypes = {\r\n  branding: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nexport default (props) => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-5\">About Contact Manager</h1>\r\n      <span>{props.match.params.id}</span>\r\n      <p className=\"lead\">Simple app to manage contacts</p>\r\n      <p className=\"secondary\">Version 1.0.0</p>\r\n    </div>\r\n  )\r\n};","import React, {Component} from 'react';\r\n\r\nclass Test extends Component {\r\n  state = {\r\n    title: '',\r\n    body: ''\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch('https://jsonplaceholder.typicode.com/posts/1')\r\n      .then(response => response.json())\r\n      .then(data => this.setState({\r\n        title: data.title,\r\n        body: data.body\r\n      }))\r\n  }\r\n\r\n  /*\r\n    componentWillReceiveProps(nextProps) {\r\n      console.log('componentWillReceiveProps...');\r\n    }\r\n\r\n    componentWillMount() {\r\n      console.log('componentWillMount...');\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n\r\n    }\r\n\r\n    componentWillUpdate(nextProps, nextState) {\r\n      console.log('componentWillUpdate...');\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n      console.log('componentDidUpdate...');\r\n    }\r\n\r\n    componentWillUnmount() {\r\n\r\n    }\r\n\r\n    static getDerivedStateFromProps(nextProps, prevState) {\r\n      return null;\r\n    }\r\n\r\n    getSnapshotBeforeUpdate(prevProps, prevState) {\r\n      console.log('getSnapshotBeforeUpdate...');\r\n\r\n    }*/\r\n\r\n\r\n  render() {\r\n    const {title, body} = this.state;\r\n    return (\r\n      <div>\r\n        <h1>{title}</h1>\r\n        <p>{body}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default Test;","import React, {Component} from 'react';\nimport {HashRouter as Router, Route, Switch} from \"react-router-dom\";\nimport Contacts from './components/contacts/Contacts';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport NotFound from \"./components/pages/NotFound\";\nimport Header from './components/layout/Header';\nimport About from './components/pages/About';\nimport Test from './components/test/Test';\n\nimport {Provider} from \"./context\";\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './App.css';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\"/>\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts}/>\n                <Route exact path=\"/contact/add\" component={AddContact}/>\n                <Route exact path=\"/contact/edit/:id\" component={EditContact}/>\n                <Route exact path=\"/about\" component={About}/>\n                <Route exact path=\"/test\" component={Test}/>\n                <Route component={NotFound}/>\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}